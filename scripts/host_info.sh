#! /bin/bash

#Setup argumemnts
psql_host=$1
port=$2
db_name=$3
user_name=$4
password=$5

lscpu_out=`lscpu`

get_hostname() {
hostname=$(hostname -f)}
}

get_cpu_number() {
cpu_number=$(echo "$lscpu_out" | egrep "^CPU\(s\):" | awk '{print $2}' | xargs)
}

get_cpu_architecture() {
cpu_architecture=$(echo "$lscpu_out" | egrep "Architecture:" | awk '{print $2}' | xargs)
}

get_cpu_model() {
cpu_model=$(echo "$lscpu_out" | egrep "Model:" | awk '{print $2}' | xargs)
}

get_cpu_mhz() {
cpu_mhz=$(echo "$lscpu_out" | egrep "CPU MHz" | awk '{print $3}' | xargs)
}

get_l2_cache() {
l2_cache=$(echo "$lscpu_out" | egrep "L2 cache:" | awk '{print $3}' | grep -o -E '[0-9]+')
}

#Step1: Parse data and setup variable
get_hostname
get_cpu_number
get_cpu_architecture
get_cpu_model
get_cpu_mhz
get_l2_cache

total_mem=$(cat /proc/meminfo | egrep "MemTotal" | awk '{print $2}' | xargs)
timestamp=$(date)
#Step2: construct insert statement
insert_stmt=$(cat <<-END
INSERT INTO host_info (hostname, cpu_number, cpu_architecture, cpu_model, cpu_mhz, l2_cache, total_mem, "timestamp") VALUES('${hostname}', ${cpu_number}, '${cpu_architecture}','${cpu_model}', ${cpu_mhz}, '${l2_cache}', ${total_mem}, '${timestamp}');
END
)
echo $insert_stmt

#Step 3: execute insert statement
export PGPASSWORD=$password
psql -h $psql_host -p $port -U $user_name -d $db_name -c "$insert_stmt"
sleep 1

#Step 4: save host id generated by PSQL table to a local file
host_id=`psql -h localhost -U postgres host_agent -c "select id from host_info where hostname='${hostname}'" | tail -3 | head -1 | xargs`
echo $host_id > ~/host_id
cat ~/host_id



